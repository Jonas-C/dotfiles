return {
	{
		"catppuccin/nvim",
		name = "catppuccin",
		priority = 1000,
		config = function()
			require("catppuccin").setup({
				flavour = "mocha", -- latte, frappe, macchiato, mocha
				-- Taken from https://github.com/catppuccin/nvim/discussions/323#discussioncomment-6488799
				-- Slightly modified :)
				color_overrides = {
					mocha = {
						rosewater = "#efc9c2",
						flamingo = "#ebb2b2",
						pink = "#f2a7de",
						mauve = "#b889f4",
						red = "#ea7183",
						maroon = "#ea838c",
						peach = "#f39967",
						-- This is a custom override
						yellow = "#ffcb6b",
						green = "#96d382",
						teal = "#78cec1",
						sky = "#91d7e3",
						sapphire = "#68bae0",
						blue = "#739df2",
						lavender = "#a0a8f6",
						-- This is a custom override
						text = "#ffffff",
						subtext1 = "#a6b0d8",
						subtext0 = "#959ec2",
						overlay2 = "#848cad",
						overlay1 = "#717997",
						overlay0 = "#63677f",
						surface2 = "#505469",
						surface1 = "#3e4255",
						surface0 = "#2c2f40",
						base = "#1a1c2a",
						mantle = "#141620",
						crust = "#0e0f16",
					},
				},
				no_italic = true, -- Force no italic
				custom_highlights = function(colors)
					return {
						["NeoTreeDirectoryName"] = { fg = colors.text },
						["NeoTreeDirectoryIcon"] = { fg = colors.text },
						["NeoTreeRootName"] = { fg = colors.text },
						["@constructor.tsx"] = { fg = colors.yellow },
						["@parameter"] = { fg = colors.text },
						["@punctuation.bracket"] = { fg = colors.yellow },
						["@punctuation.special"] = { fg = colors.sapphire },
						["@variable.builtin"] = { fg = colors.flamingo },
						["@variable.builtin.css"] = { fg = colors.maroon },
						["@lsp.type.interface"] = { fg = colors.yellow },
					}
				end,
				integrations = {
					cmp = true,
					harpoon = true,
					gitsigns = true,
					nvimtree = true,
					treesitter = true,
					mason = true,
					neotree = true,
					neogit = true,
					noice = true,
					semantic_tokens = true,
					telescope = {
						enabled = true,
					},
					illuminate = {
						enabled = true,
						lsp = true,
					},
					native_lsp = {
						enabled = true,
						underlines = {
							errors = { "undercurl" },
							hints = { "undercurl" },
							warnings = { "undercurl" },
							information = { "undercurl" },
						},
					},
					mini = {
						enabled = true,
						indentscope_color = "sky",
					},
				},
			})

			vim.cmd.colorscheme("catppuccin")
		end,
	},
	{
		"marko-cerovac/material.nvim",
		lazy = true,
		config = function()
			vim.g.material_style = "darker"
			local colors = require("material.colors")
			local c = colors.main
			require("material").setup({
				disable = {
					eob_lines = true,
				},
				high_visibility = {
					darker = true,
				},
				contrast = {
					cursor_line = true,
					terminal = true,
				},
				styles = {
					comments = { italic = true },
				},

				lualine_style = "stealth",
				plugins = {
					"gitsigns",
					"nvim-cmp",
					"nvim-web-devicons",
					"telescope",
				},
				custom_highlights = {
					["TSRainbowYellow"] = { fg = c.yellow },
					["TSRainbowViolet"] = { fg = c.purple },
					["TSRainbowCyan"] = { fg = c.darkblue },
					["ScrollbarHandle"] = { fg = c.yellow },
					["NeoTreeDirectoryName"] = { fg = colors.editor.fg },
					["NeoTreeDirectoryIcon"] = { fg = colors.editor.fg },
					["NeoTreeGitUntracked"] = { fg = c.green },
					["NeoTreeNormal"] = { bg = "#1a1a1a" },
					["NeoTreeNormalNC"] = { bg = "#1a1a1a" },
					IlluminatedWordText = { bg = colors.editor.highlight },
					IlluminatedWordRead = { bg = colors.editor.highlight },
					IlluminatedWordWrite = { bg = colors.editor.highlight },
					["@include"] = {
						fg = c.cyan,
						italic = true,
					},
					DiffAdd = { bg = "#4D573E" },
					DiffDelete = { bg = "#6C3E41" },
					DiffChange = { bg = "#4D573E" },
					DiffText = { bg = "#4D573E" },
					["@tag.attribute"] = { fg = c.purple },
					["@constant.builtin"] = { fg = c.cyan },
					["@variable.builtin"] = { fg = c.cyan },
					["@property"] = { fg = c.white },
					["@member"] = { fg = c.blue },
					["@variable"] = { fg = c.white },
					["Identifier"] = { fg = c.white },
					["@variable.builtin.css"] = { fg = c.orange },
					["typescriptVariable"] = { fg = c.purple },
					["typescriptBlock"] = { fg = c.white },
					["typescriptIdentifierName"] = { fg = c.white },
					["typescriptArrowFunc"] = { fg = c.purple },
					["typescriptDestructureAs"] = { fg = c.cyan },
					["typescriptAssign"] = { fg = c.cyan },
					["typescriptDestructureComma"] = { fg = c.cyan },
					["typescriptParentExp"] = { fg = c.cyan },
					["typescriptDotNotation"] = { fg = c.cyan },
					["typescriptEndColons"] = { fg = c.cyan },
					["tsxAttrib"] = { fg = c.purple },
					["htmlTagName"] = { fg = c.red },
					["typescriptBinaryOp"] = { fg = c.cyan },
					["@interface"] = { fg = c.yellow },
					["@constructor.tsx"] = { fg = c.yellow },
					["@punctuation.bracket.tsx"] = { fg = c.yellow },
					["@type"] = { fg = c.yellow },
					["TSType"] = { fg = c.yellow },
					["Type"] = { fg = c.yellow },
					["@keyword"] = { fg = c.cyan },
					["@keyword.return"] = { fg = c.cyan },
					["@function.builtin"] = { fg = c.cyan },
					["@property.styled"] = { fg = c.fg },
					["@identifier.styled"] = { fg = c.white },
					["@type.styled"] = { fg = c.purple },
					["@tag"] = { fg = c.red },
					["@label.json"] = { fg = c.purple },
					Structure = { fg = c.yellow },
					NonText = { fg = c.white },
					["@type.builtin"] = { fg = c.yellow },
					["@parameter"] = { fg = c.white },
					["@field"] = { fg = c.white },
					["@punctuation.special.styled"] = { fg = c.yellow },
					["@storageclass.lifetime"] = { fg = c.purple },
					["@namespace"] = { fg = c.yellow },
					["@function.macro"] = { fg = c.yellow },
					["@punctuation.special"] = { fg = c.cyan },
					["@none"] = { fg = c.white },
					["@dollar"] = { fg = c.yellow },
					["@type.qualifier"] = { fg = c.orange },
					["@operator.styled"] = { fg = c.white },
					["@variable.builtin.styled"] = { fg = c.orange },
					["@property.pseudo"] = { fg = c.purple },
					["@pseudo.ampersand"] = { fg = c.yellow },
					["@conditional"] = { fg = c.cyan },
					["@keyword.declaration"] = { fg = c.purple },
					["@keyword.export.typescript"] = { fg = c.cyan },
					["@lsp.type.interface"] = { fg = c.yellow },
					["@value.plain"] = { fg = "#B0BEC5" },
					["@error.css"] = { fg = "#B0BEC5" },
					CmpItemMenu = { fg = c.white },
					GitSignsCurrentLineBlame = { link = "@comment" },
					IndentBlanklineContextChar = { fg = c.cyan },
					FloatBorder = { fg = c.white },
				},
			})
			-- vim.cmd([[colorscheme material]])
		end,
	},
}
